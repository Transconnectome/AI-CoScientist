[tool.poetry]
name = "ai-coscientist"
version = "0.1.0"
description = "AI-powered autonomous scientific research system"
authors = ["AI CoScientist Team"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.109.0"
uvicorn = {extras = ["standard"], version = "^0.27.0"}
pydantic = "^2.5.0"
pydantic-settings = "^2.1.0"
sqlalchemy = "^2.0.25"
alembic = "^1.13.1"
asyncpg = "^0.29.0"
redis = {extras = ["hiredis"], version = "^5.0.1"}
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-multipart = "^0.0.6"
openai = "^1.10.0"
anthropic = "^0.8.0"
sentence-transformers = "^2.2.2"
chromadb = "^0.4.22"
httpx = "^0.26.0"
jinja2 = "^3.1.3"
celery = {extras = ["redis"], version = "^5.3.4"}
aio-pika = "^9.3.1"
prometheus-client = "^0.19.0"
structlog = "^24.1.0"
tiktoken = "^0.5.2"
pandas = "^2.1.4"
numpy = "^1.26.3"
scipy = "^1.11.4"
matplotlib = "^3.8.2"
seaborn = "^0.13.0"
plotly = "^5.18.0"
python-dotenv = "^1.0.0"
transformers = "^4.36"
torch = "^2.1"
bert-score = "^0.3"
scikit-learn = "^1.3"
spacy = "^3.7"
nltk = "^3.8"
textstat = "^0.7"
accelerate = "^0.25"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.4"
pytest-asyncio = "^0.23.3"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
black = "^23.12.1"
ruff = "^0.1.11"
mypy = "^1.8.0"
pre-commit = "^3.6.0"
ipython = "^8.19.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ["py311"]
include = '\.pyi?$'

[tool.ruff]
line-length = 100
target-version = "py311"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long (handled by black)
    "B008", # do not perform function calls in argument defaults
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --cov=src --cov-report=term-missing"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/migrations/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
